{"version":3,"sources":["app/main.js"],"names":["GridContainer","props","state","filter","logic","filters","undefined","dataSource","kendo","data","DataSource","transport","read","url","dataType","parameterMap","options","operation","models","stringify","batch","pageSize","schema","model","id","fields","shipping","editable","type","starting","add_product","login","current_step","gcs_completed","thanks","waiting","ip","proxy","billing","this","pageable","height","sortable","scrollable","field","title","width","React","Component","ReactDOM","render","document","querySelector"],"mappings":"uQAOMA,G,mBAEF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAiDVC,MAAQ,CACJC,OAAQ,CACJC,MAAO,MACPC,QAAS,MACLC,KAnDR,EAAKC,WAAa,IAAIC,IAAMC,KAAKC,WAAW,CACxCC,UAAW,CACPC,KAAO,CACHC,IAAI,qEACJC,SAAU,QAcdC,aAAc,SAASC,EAASC,GAC5B,GAAkB,SAAdA,GAAwBD,EAAQE,OAChC,MAAO,CAACA,OAAQV,IAAMW,UAAUH,EAAQE,WAIpDE,OAAO,EACPC,SAAU,GACVC,OAAQ,CACJC,MAAO,CACHC,GAAI,KACJC,OAAQ,CACJC,SAAW,CAACC,UAAU,EAAOC,KAAM,QACnCC,SAAW,CAACF,UAAU,EAAOC,KAAM,QACnCE,YAAa,CAACH,UAAU,EAAOC,KAAM,QACrCG,MAAO,CAACJ,UAAU,EAAOC,KAAM,QAC/BI,aAAc,CAACL,UAAU,EAAOC,KAAM,QACtCK,cAAe,CAACN,UAAU,EAAOC,KAAM,QACvCM,OAAQ,CAACP,UAAU,EAAOC,KAAM,QAChCO,QAAS,CAACR,UAAU,EAAOC,KAAM,QACjCQ,GAAI,CAACT,UAAU,EAAQC,KAAM,QAC7BS,MAAO,CAACV,UAAU,EAAQC,KAAM,QAChCU,QAAW,CAACX,UAAU,EAAQC,KAAM,aA3CrC,E,sEA4Df,OACI,kBAAC,IAAD,CACIrB,WAAYgC,KAAKhC,WAGjBiC,UAAU,EACVC,OAAQ,IACRC,UAAU,EACVC,YAAY,GAKZ,kBAAC,IAAD,CAAYC,MAAM,WAAWC,MAAM,WAAWC,MAAM,UACpD,kBAAC,IAAD,CAAYF,MAAM,WAAaC,MAAM,WAAWC,MAAM,UACtD,kBAAC,IAAD,CAAYF,MAAM,cAAgBC,MAAM,cAAcC,MAAM,UAC5D,kBAAC,IAAD,CAAYF,MAAM,QAASC,MAAM,QAAQC,MAAM,UAC/C,kBAAC,IAAD,CAAYF,MAAM,eAAgBC,MAAM,eAAeC,MAAM,UAC7D,kBAAC,IAAD,CAAYF,MAAM,gBAAkBC,MAAM,gBAAgBC,MAAM,UAChE,kBAAC,IAAD,CAAYF,MAAM,SAAUC,MAAM,SAASC,MAAM,UACjD,kBAAC,IAAD,CAAYF,MAAM,UAAYC,MAAM,UAAUC,MAAM,UACpD,kBAAC,IAAD,CAAYF,MAAM,KAAOC,MAAM,KAAKC,MAAM,UAC1C,kBAAC,IAAD,CAAYF,MAAM,QAAQC,MAAM,QAAUC,MAAM,UAChD,kBAAC,IAAD,CAAYF,MAAM,UAAUC,MAAM,UAAYC,MAAM,e,GArFxCC,IAAMC,YA2FlCC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,kB","file":"static/js/main.56333767.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport kendo from '@progress/kendo-ui';\r\nimport { Grid, GridColumn, Column } from '@progress/kendo-grid-react-wrapper';\r\nimport { filterBy } from '@progress/kendo-data-query';\r\n\r\n\r\nclass GridContainer extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dataSource = new kendo.data.DataSource({\r\n            transport: {\r\n                read:  {\r\n                    url:\"https://bmgavzf5zj.execute-api.us-west-2.amazonaws.com/Prod/status\",//\"https://demos.telerik.com/kendo-ui/service/Products\",\r\n                    dataType: \"json\"\r\n                },\r\n                /*update: {\r\n                    url: \"https://demos.telerik.com/kendo-ui/service/Products/Update\",\r\n                    dataType: \"jsonp\"\r\n                },\r\n                destroy: {\r\n                    url: \"https://demos.telerik.com/kendo-ui/service/Products/Destroy\",\r\n                    dataType: \"jsonp\"\r\n                },\r\n                create: {\r\n                    url: \"https://demos.telerik.com/kendo-ui/service/Products/Create\",\r\n                    dataType: \"jsonp\"\r\n                },*/\r\n                parameterMap: function(options, operation) {\r\n                    if (operation !== \"read\" && options.models) {\r\n                        return {models: kendo.stringify(options.models)};\r\n                    }\r\n                }\r\n            },\r\n            batch: true,\r\n            pageSize: 20,\r\n            schema: {\r\n                model: {\r\n                    id: \"id\",\r\n                    fields: {\r\n                        shipping:  {editable: false, type: \"text\"},\r\n                        starting:  {editable: false, type: \"text\"},\r\n                        add_product: {editable: false, type: \"text\"},\r\n                        login: {editable: false, type: \"text\"},                        \r\n                        current_step: {editable: false, type: \"text\"},\r\n                        gcs_completed: {editable: false, type: \"text\"},\r\n                        thanks: {editable: false, type: \"text\"},\r\n                        waiting: {editable: false, type: \"text\"},                        \r\n                        ip: {editable: false,  type: \"text\" },\r\n                        proxy: {editable: false,  type: \"text\" },\r\n                        billing :  {editable: false,  type: \"text\" }                                         \r\n                    }\r\n                }\r\n            }\r\n        })       \r\n    }\r\n\r\n    state = {\r\n        filter: {\r\n            logic: \"and\",\r\n            filters: [\r\n                undefined\r\n            ]\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Grid \r\n                dataSource={this.dataSource}\r\n                //toolbar={[\"create\"]}\r\n                //editable={\"inline\"}\r\n                pageable={true}\r\n                height={550}   \r\n                sortable={true}\r\n                scrollable={true}\r\n                //filterable={true}\r\n           \r\n                >\r\n\r\n                <GridColumn field=\"shipping\" title=\"shipping\" width=\"120px\" />\r\n                <GridColumn field=\"starting\"   title=\"starting\" width=\"120px\" />\r\n                <GridColumn field=\"add_product\"   title=\"add_product\" width=\"120px\" />\r\n                <GridColumn field=\"login\"  title=\"login\" width=\"120px\" />\r\n                <GridColumn field=\"current_step\"  title=\"current_step\" width=\"120px\" />\r\n                <GridColumn field=\"gcs_completed\"   title=\"gcs_completed\" width=\"120px\" />\r\n                <GridColumn field=\"thanks\"  title=\"thanks\" width=\"120px\" />\r\n                <GridColumn field=\"waiting\"   title=\"waiting\" width=\"120px\" />\r\n                <GridColumn field=\"ip\"   title=\"ip\" width=\"120px\" />\r\n                <GridColumn field=\"proxy\" title=\"proxy\"   width=\"120px\" />\r\n                <GridColumn field=\"billing\" title=\"billing\"   width=\"120px\" />\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <GridContainer />,\r\n    document.querySelector('react-kendo')\r\n);\r\n"],"sourceRoot":""}